// Display Utilities / Layouts

// Content Of this document
/********
1) Flexbox Utilities
2) Flexbox Sticky Footer Layout
3) Grid Utilities
4) Grid Sticky Footer Layout
********/

// 1) Flexbox utilities
/*Flexbox utility classes can only be used together with the ".flex" class,
so "display: flex" have to be present for any layout to work. */
.flex {
  display: flex;

  &.wrap {
    flex-wrap: wrap;
  }
}
.inline-flex {
  display: inline-flex;
}
.column {
  display: flex;
  flex-direction: column;
}
.content-start {
  display: flex;
  justify-content: start;
}
.space-around {
  display: flex;
  justify-content: space-around;
}
.justify-center {
  display: flex;
  justify-content: center;
}
.space-between {
  display: flex;
  justify-content: space-between;
}
.align-items-center {
  display: flex;
  align-items: center;
}
.align-items-baseline {
  display: flex;
  align-items: baseline;
}
.align-self-center {
  display: flex;
  align-self: center;
}

// 2) Flexbox Sticky Footer Layout
/* --- Flexbox sticky footer utility --- */
// In order for this layout to work, class .sticky footer must be applied on the html, body tags and also body must contain 
// an element that has a class .sticky-footer-flex-content in order to push footer to the bottom of the page,
// even if there is no content on the page, the footer will still be attached to the bottom of the page.

/* --- Flexbox sticky footer usage example --- */
// In order for this layout to work, your html markup must follow the pattern illustrated below:

/***********************************
<html class="sticky-footer-flexbox">
<body>

  <header>
    (header element is included only for demonstration purposes,
    and does not have to be present in your html document,
    since it will not affect flexbox sticky footer feature)
  </header>

  <section class="sticky-footer-flex-content">
    (section tag could be replaced with a "div" or pretty much any other tag/element,
    but absolutely must have the class="sticky-footer-flex-content" applied on it.
    This element does not to be filled with any kind of content, and may remain empty if needed,
    it will still push the "footer" to the bottom of the page)
  </section>

  <footer>
    (footer will be pushed to the bottom of the page)
  </footer>

</body>
</html>
***********************************/

html.sticky-footer-flexbox {
  height: 100%;

  // .sticky-footer class gives the body tag flex layout, column direction and minimum height 100% 
  body {
    display: flex;
    flex-direction: column;
    min-height: 100%;
  }
}

// Content area
// .sticky-footer class must be applied on the content section located inside your "body" tag, so it would push the footer to the bottom
.sticky-footer-flex-content {
  display: flex;
  flex: 1 auto;
}
/* --- Sticky Footer Layout Ends --- */

// Additionally, we can specify the layout for the content in the content section

// Use .centered class to center content inside your content section tag vertically and horizontally
.centered {
  justify-content: center;
  align-items: center;
  text-align: center;
}
// Use .center-top class to center content inside the section tag horizontally
.center-top {
  flex-direction: column;
  align-items: center;
  text-align: center;
}

// 3) Grid Utilities
/*Grid utility classes can only be used together with the ".grid" class,
so "display: grid" have to be present for any layout to work. */

.grid {
  display: grid;
}

// 4) Grid Sticky Footer Layout
/* --- Grid sticky footer utility --- */
// In order for this layout to work, we need to follow the provided example:
/*

<html class="sticky-footer-grid">
<body>

  <header>
    (height will be set to auto, and will take only the soace that needed to fit it's content)
  </header>

  <section>
    (height will be set 1fr, which means that this element will 
    take all the available space between <header> and <footer>,
    pushing <footer> to the bottom)
  </section>

  <footer>
    (height will be set to auto, and will take only the soace that needed to fit it's content)
  </footer>

</body>
</html>

*/
// Elements can be adjusted to your needs of course, meaning that it could be:
// 
//  <div></div>
//  <div></div>
//  <div></div>
//
// instead of what is showing above, or any orher tags really,
// This utility class must be applied on the html element as illustrated above

html.sticky-footer-grid {
  height: 100%;

  body {
    height: 100%;
    display: grid;
    grid-template-rows: auto 1fr auto;
  }
}

/* --- Grid Sticky Footer Layout Ends --- */